version: "3.9"

services:

  stage:
    image: iocchi/stage_environments
    container_name: stage
    network_mode: "host"
    tty: true
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix
        - $HOME/.Xauthority:/home/robot/.Xauthority
    entrypoint:
        - bash
        - -ci
        - "sleep 5 && rosrun stage_environments start_simulation.py --tmux --server -server_port 9235"

  navigation:
    image: nicodman/thesis:marrtinonavigation
    container_name: navigation
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
        - ROBOT_TYPE=$ROBOT_TYPE
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix:rw
    
  speech:
    image: nicodman/thesis:marrtinospeech
    container_name: speech
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
        - ROBOT_TYPE=$ROBOT_TYPE
    volumes: 
        - /tmp/.X11-unix:/tmp/.X11-unix:rw          
        - /dev:/dev

  vision:
    image: nicodman/thesis:myvision
    container_name: vision
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
        - CAMRES=$CAMRES
        - ROBOT_TYPE=$ROBOT_TYPE
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix:rw          
        - /dev:/dev

  stagepersondetection:
    image: iocchi/stagepersondetection
    container_name: stagepersondetection
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    entrypoint:
    - bash
    - -ci
    - "python3 stageperson_net.py -modelname spd --server -server_port 9250"

  actions:
    image: nicodman/thesis:myactions
    container_name: actions
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
        - ROBOT_TYPE=$ROBOT_TYPE
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix:rw
        - $DEMO_DIR:/home/robot/src/DIAG_demo
    entrypoint:
        - bash
        - -ci
        - "sleep 15 && cd ~/src/DIAG_demo/bin && ./init.bash"

  pnp:
    image: iocchi/pnp
    container_name: pnp
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
        - ROBOT_TYPE=$ROBOT_TYPE
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix:rw
    entrypoint:
    - bash
    - -ci
    - "sleep 10 && roscd pnp_ros && ./init.bash"
  
  persondetection:
    image: nicodman/thesis:persondetection
    container_name: persondetection
    dns: 8.8.8.8
    network_mode: "host"
    stdin_open: true        #docker run -i
    tty: true               #docker run -t
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
    privileged: true
    devices:
        - /dev/video0:/dev/video0
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix:rw          
        - /dev:/dev
    entrypoint:
         - bash
         - -ci
         - "python3 stage_pd.py --server"
   
  facedetection:
    image: nicodman/thesis:facedetection
    container_name: facedetection
    dns: 8.8.8.8
    network_mode: "host"
    stdin_open: true #docker run -i
    tty: true        #docker run -t
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
    privileged: true
    devices:
         - /dev/video0:/dev/video0
    volumes:
         - /tmp/.X11-unix:/tmp/.X11-unix:rw
         - /dev:/dev
    entrypoint:
         - bash
         - -ci
         - "python3 stage_fd.py --server -modelname fer"
            
  fer:
    image: nicodman/thesis:faceExpression
    container_name: fer
    dns: 8.8.8.8
    network_mode: "host"
    stdin_open: true #docker run -i
    tty: true        #docker run -t
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
    privileged: true
    devices:
        - /dev/video0:/dev/video0
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix:rw
        - /dev:/dev
    entrypoint:
        - bash
        - -ci
        - "python3 stage_fer.py --server -modelname fer"
        
  legdetection:
    image: nicodman/thesis:legdetection
    container_name: legdetection
    dns: 8.8.8.8
    network_mode: "host"
    stdin_open: true #docker run -i
    tty: true        #docker run -t
    environment:
        - DISPLAY=:0
        - ROS_IP=$ROS_IP
    privileged: true
    devices:
        - /dev/video0:/dev/video0
    volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix:rw
        - /dev:/dev
    entrypoint:
        - bash
        - -ci
        - "roslaunch edge_leg_detector edge_leg_detector.launch laser_scan:=/scan"
